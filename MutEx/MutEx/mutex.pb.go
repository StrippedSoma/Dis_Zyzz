// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: mutex.proto

package MutEx

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId    int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RequestMessage) Reset() {
	*x = RequestMessage{}
	mi := &file_mutex_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMessage) ProtoMessage() {}

func (x *RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mutex_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMessage.ProtoReflect.Descriptor instead.
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return file_mutex_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMessage) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *RequestMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ReplyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Granted   bool  `protobuf:"varint,1,opt,name=granted,proto3" json:"granted,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ReplyMessage) Reset() {
	*x = ReplyMessage{}
	mi := &file_mutex_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyMessage) ProtoMessage() {}

func (x *ReplyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mutex_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyMessage.ProtoReflect.Descriptor instead.
func (*ReplyMessage) Descriptor() ([]byte, []int) {
	return file_mutex_proto_rawDescGZIP(), []int{1}
}

func (x *ReplyMessage) GetGranted() bool {
	if x != nil {
		return x.Granted
	}
	return false
}

func (x *ReplyMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ReleaseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId    int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ReleaseMessage) Reset() {
	*x = ReleaseMessage{}
	mi := &file_mutex_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseMessage) ProtoMessage() {}

func (x *ReleaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mutex_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseMessage.ProtoReflect.Descriptor instead.
func (*ReleaseMessage) Descriptor() ([]byte, []int) {
	return file_mutex_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseMessage) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ReleaseMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type QuitMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32  `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"` // Node ID of the client quitting
	Port   string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`      // Port of the client quitting
}

func (x *QuitMessage) Reset() {
	*x = QuitMessage{}
	mi := &file_mutex_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitMessage) ProtoMessage() {}

func (x *QuitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mutex_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitMessage.ProtoReflect.Descriptor instead.
func (*QuitMessage) Descriptor() ([]byte, []int) {
	return file_mutex_proto_rawDescGZIP(), []int{3}
}

func (x *QuitMessage) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *QuitMessage) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_mutex_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_mutex_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_mutex_proto_rawDescGZIP(), []int{4}
}

var File_mutex_proto protoreflect.FileDescriptor

var file_mutex_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x4d,
	0x75, 0x74, 0x45, 0x78, 0x22, 0x47, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x46, 0x0a,
	0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x47, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x39,
	0x0a, 0x0b, 0x51, 0x75, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0xa5, 0x01, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x4d, 0x75, 0x74, 0x45, 0x78, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x4d, 0x75,
	0x74, 0x45, 0x78, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x15, 0x2e, 0x4d, 0x75,
	0x74, 0x45, 0x78, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x4d, 0x75, 0x74, 0x45, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x74, 0x12, 0x12, 0x2e, 0x4d, 0x75, 0x74, 0x45, 0x78,
	0x2e, 0x51, 0x75, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x4d,
	0x75, 0x74, 0x45, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x4d,
	0x75, 0x74, 0x45, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mutex_proto_rawDescOnce sync.Once
	file_mutex_proto_rawDescData = file_mutex_proto_rawDesc
)

func file_mutex_proto_rawDescGZIP() []byte {
	file_mutex_proto_rawDescOnce.Do(func() {
		file_mutex_proto_rawDescData = protoimpl.X.CompressGZIP(file_mutex_proto_rawDescData)
	})
	return file_mutex_proto_rawDescData
}

var file_mutex_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_mutex_proto_goTypes = []any{
	(*RequestMessage)(nil), // 0: MutEx.RequestMessage
	(*ReplyMessage)(nil),   // 1: MutEx.ReplyMessage
	(*ReleaseMessage)(nil), // 2: MutEx.ReleaseMessage
	(*QuitMessage)(nil),    // 3: MutEx.QuitMessage
	(*Empty)(nil),          // 4: MutEx.Empty
}
var file_mutex_proto_depIdxs = []int32{
	0, // 0: MutEx.MutexService.RequestAccess:input_type -> MutEx.RequestMessage
	2, // 1: MutEx.MutexService.Release:input_type -> MutEx.ReleaseMessage
	3, // 2: MutEx.MutexService.Quit:input_type -> MutEx.QuitMessage
	1, // 3: MutEx.MutexService.RequestAccess:output_type -> MutEx.ReplyMessage
	4, // 4: MutEx.MutexService.Release:output_type -> MutEx.Empty
	4, // 5: MutEx.MutexService.Quit:output_type -> MutEx.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mutex_proto_init() }
func file_mutex_proto_init() {
	if File_mutex_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mutex_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mutex_proto_goTypes,
		DependencyIndexes: file_mutex_proto_depIdxs,
		MessageInfos:      file_mutex_proto_msgTypes,
	}.Build()
	File_mutex_proto = out.File
	file_mutex_proto_rawDesc = nil
	file_mutex_proto_goTypes = nil
	file_mutex_proto_depIdxs = nil
}
